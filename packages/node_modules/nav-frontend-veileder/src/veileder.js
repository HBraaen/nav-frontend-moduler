"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const PT = require("prop-types");
const cn = require("classnames");
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
const veileder_chat_bubble_1 = require("./veileder-chat-bubble");
require("nav-frontend-veileder-style");
const cls = (props) => cn('nav-frontend-veileder', {
    'nav-frontend-veileder--warning': props.type === 'advarsel',
    'nav-frontend-veileder--error': props.type === 'feilmelding',
    'nav-frontend-veileder--success': props.type === 'suksess'
});
const frameCls = (props) => cn('nav-frontend-veileder__frame', {
    'nav-frontend-veileder__frame--center': props.center,
    'nav-frontend-veileder__frame--transparent': props.transparent,
    'nav-frontend-veileder__frame--nomask': props.nomask
});
function getChatBubble(says, veilederSize) {
    if (typeof says !== 'undefined' && says) {
        return React.createElement(veileder_chat_bubble_1.default, { says: says, offset: veilederSize });
    }
}
class Veileder extends React.Component {
    render() {
        const { children, says, color, transparent, width = 230, ...other } = this.props;
        const domProps = nav_frontend_js_utils_1.omit({ ...other }, 'center', 'nomask');
        const frameStyles = {};
        if (!transparent && color) {
            frameStyles.background = color;
        }
        if (width) {
            frameStyles.width = width;
            frameStyles.height = width;
        }
        return (React.createElement("div", Object.assign({ className: cls(this.props) }, domProps),
            React.createElement("div", { className: frameCls(this.props), style: frameStyles }, children),
            getChatBubble(says, width)));
    }
}
Veileder.defaultProps = {
    type: 'normal'
};
Veileder.propTypes = {
    /**
     * Definerer størrelsen på Avataren. Kan angis helt fritt, og snakkeboblen vil posisjoneres
     * og snakkeboble-pilen vil skalere basert på denne verdien.
     */
    width: PT.number,
    /**
     * Custom SVG-element som illustrerer en figur, f.eks. en av disse:
     * https://app.zeplin.io/project/59831e455850985791bdeb4d/screen/5a7c1fcc36781f9423ab6a0e
     */
    children: PT.node.isRequired,
    /**
     * Tekst eller HTML som rendres i en snakkeboble
     */
    says: PT.node,
    /**
     * Hex-fargecode som definerer bakgrunnsfarge, @navLysGra er default
     */
    color: PT.string,
    /**
     * Skrur av bakgrunnsfargen
     */
    transparent: PT.bool,
    /**
     * Skrur av sirkulær maskering/cropping av children
     */
    nomask: PT.bool,
    /**
     * Skrur av 80% height på children, og rendrer i full høyde (hvis innholdet skal sentreres)
     */
    center: PT.bool,
    /**
     * Predefinerte nøkler for styling av snakkeboblen, avhengig av type budskap.
     */
    type: PT.oneOf(['normal', 'suksess', 'advarsel', 'feilmelding'])
};
Veileder.defaultProps = {
    width: 230,
    transparent: false,
    nomask: false,
    center: false,
    type: 'normal'
};
exports.default = Veileder;
//# sourceMappingURL=veileder.js.map