"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const classnames = require("classnames");
const react_collapse_1 = require("react-collapse");
require("nav-frontend-ekspanderbartpanel-style");
const cls = (apen, border, className) => classnames('ekspanderbartPanel', className, {
    'ekspanderbartPanel--lukket': !apen,
    'ekspanderbartPanel--apen': apen,
    'ekspanderbartPanel--border': border
});
class EkspanderbartpanelBasePure extends React.Component {
    constructor() {
        super(...arguments);
        this.isCloseAnimation = false;
        this.onRestProxy = () => {
            this.isCloseAnimation = false;
            const { collapseProps } = this.props;
            if (collapseProps && collapseProps.onRest) {
                collapseProps.onRest();
            }
        };
    }
    componentWillReceiveProps(nextProps) {
        if (this.props.apen && !nextProps.apen) {
            this.isCloseAnimation = true;
        }
    }
    tabHandler(event) {
        const { keyCode } = event;
        const isTab = keyCode === 9;
        if (isTab && this.isCloseAnimation) {
            event.preventDefault();
        }
    }
    render() {
        const { className, children, apen, heading, ariaTittel, onClick, collapseProps, border, ...renderProps } = this.props;
        return (React.createElement("div", Object.assign({ className: cls(apen, border, className) }, renderProps),
            React.createElement("button", { className: "ekspanderbartPanel__hode", onKeyDown: (event) => this.tabHandler(event), onClick: onClick, "aria-expanded": apen, type: "button" },
                React.createElement("div", { className: "ekspanderbartPanel__flex-wrapper" },
                    heading,
                    React.createElement("span", { className: "ekspanderbartPanel__indikator" }))),
            React.createElement(react_collapse_1.UnmountClosed, Object.assign({ isOpened: apen, onRest: this.onRestProxy }, collapseProps),
                React.createElement("article", { "aria-label": ariaTittel, className: "ekspanderbartPanel__innhold" }, children))));
    }
}
EkspanderbartpanelBasePure.defaultProps = {
    border: false
};
exports.default = EkspanderbartpanelBasePure;
//# sourceMappingURL=ekspanderbartpanel-base-pure.js.map