"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PT = require("prop-types");
const React = require("react");
const classNames = require("classnames");
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
require("nav-frontend-knapper-style");
const cls = (props) => classNames('knapp', props.className, {
    'knapp--hoved': props.type === 'hoved',
    'knapp--fare': props.type === 'fare',
    'knapp--standard': props.type === 'standard',
    'knapp--flat': props.type === 'flat',
    'knapp--mini': props.mini,
    'knapp--disabled': props.disabled,
    'knapp--spinner': props.spinner
});
function skalVareDisabled(props) {
    if (props.autoDisableVedSpinner) {
        return props.disabled || props.spinner;
    }
    return props.disabled;
}
/**
 *  Knapp, Hovedknapp og Fareknapp arver alle fra KnappBase, og har da samme props.
 *  Unntaket er `type` som blir satt av de respektive underklassene.
 */
class KnappBase extends React.Component {
    render() {
        const { children, className, ...props } = this.props;
        const spinner = props.spinner ? React.createElement("span", { className: "knapp__spinner" }) : null;
        const ariaLabel = props.spinner ? { 'aria-label': 'Laster' } : {};
        const disabled = skalVareDisabled(props);
        const type = props.htmlType;
        const domProps = nav_frontend_js_utils_1.omit({ ...props, disabled, type }, 'htmlType', 'mini', 'spinner', 'autoDisableVedSpinner', 'inaktivKlasseVedDisabled');
        return (React.createElement("button", Object.assign({ className: cls(this.props) }, domProps, ariaLabel),
            children,
            spinner));
    }
}
KnappBase.defaultProps = {
    autoDisableVedSpinner: false,
    inaktivKlasseVedDisabled: false,
    className: null,
    htmlType: 'submit',
    mini: false,
    disabled: false,
    spinner: false
};
KnappBase.propTypes = {
    children: PT.node.isRequired,
    className: PT.string,
    type: PT.oneOf(['standard', 'hoved', 'fare', 'flat']).isRequired,
    htmlType: PT.oneOf(['submit', 'button', 'reset']),
    mini: PT.bool,
    disabled: PT.bool,
    spinner: PT.bool,
    autoDisableVedSpinner: PT.bool,
    inaktivKlasseVedDisabled: PT.bool
};
exports.default = KnappBase;
var knapp_1 = require("./knapp");
exports.Knapp = knapp_1.default;
var hovedknapp_1 = require("./hovedknapp");
exports.Hovedknapp = hovedknapp_1.default;
var fareknapp_1 = require("./fareknapp");
exports.Fareknapp = fareknapp_1.default;
var flatknapp_1 = require("./flatknapp");
exports.Flatknapp = flatknapp_1.default;
//# sourceMappingURL=index.js.map