"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PT = require("prop-types");
const React = require("react");
const classNames = require("classnames");
require("nav-frontend-lukknapp-style");
const cls = (bla, hvit, hjorne, className) => classNames('lukknapp', {
    'lukknapp--hvit': hvit,
    'lukknapp--bla': bla,
    'lukknapp--overstHjorne': hjorne
}, className);
/**
 * Lukknapp
 */
class Lukknapp extends React.Component {
    constructor(props) {
        super(props);
        this.focus = this.focus.bind(this);
    }
    focus() {
        if (this.buttonRef) {
            this.buttonRef.focus();
        }
    }
    render() {
        const { children, bla, hvit, overstHjorne, className, ariaLabel, ...props } = this.props;
        return (React.createElement("button", Object.assign({ ref: (buttonRef) => {
                this.buttonRef = buttonRef;
            }, className: cls(bla, hvit, overstHjorne, className), "aria-label": ariaLabel }, props),
            React.createElement("span", { className: "text-hide" }, children)));
    }
}
Lukknapp.defaultProps = {
    children: 'Lukk',
    bla: false,
    hvit: false,
    overstHjorne: false
};
Lukknapp.defaultProps = {
    children: 'Lukk',
    bla: false,
    hvit: false,
    overstHjorne: false
};
Lukknapp.propTypes = {
    /**
     * Tekst som beskriver knappen for skjermleser
     */
    children: PT.string,
    /**
     * Blå variant
     */
    bla: PT.bool,
    /**
     * Hvit variant
     */
    hvit: PT.bool,
    /**
     * Plasser knappen øverst i høyre hjørne.
     * Knappen er absolut possisjonert og trenger derfor litt hjelp med å legge seg riktig sted.
     */
    overstHjorne: PT.bool,
    /**
     * Egendefinert klassenavn
     */
    className: PT.string,
    /**
     * @deprecated Bruk children i stedet.
     */
    ariaLabel: PT.string
};
exports.default = Lukknapp;
//# sourceMappingURL=lukknapp.js.map