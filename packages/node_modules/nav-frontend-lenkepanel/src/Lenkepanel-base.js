"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PT = require("prop-types");
const React = require("react");
const classNames = require("classnames");
require("nav-frontend-lenkepanel-style");
const cls = (className, border) => classNames('lenkepanel', className, {
    'lenkepanel--border': border
});
class LenkepanelBase extends React.Component {
    render() {
        const { className, children, linkCreator = (props) => React.createElement("a", Object.assign({}, props)), border, ...renderProps } = this.props;
        return linkCreator({
            ...renderProps,
            className: cls(className, border),
            children: [
                children,
                React.createElement("span", { key: "indikator", className: "lenkepanel__indikator" })
            ]
        });
    }
}
LenkepanelBase.defaultProps = {
    border: false
};
LenkepanelBase.propTypes = {
    /**
     * Klassenavn
     */
    className: PT.string,
    /**
     * Lenke (denne sendes som prop til linkCreator)
     */
    href: PT.string.isRequired,
    /**
     * Tekstinnhold for lenkepanel
     */
    children: PT.oneOfType([
        PT.arrayOf(PT.node),
        PT.node
    ]).isRequired,
    /**
     * Funksjon som brukes for å lage lenken. her kan du spessifisere din egen hvis du f.eks. bruker React Router
     */
    linkCreator: PT.func,
    /**
     * Hvis komponenten skal brukes på hvit bakgrunn kan denne brukes for å gi den en border
     */
    border: PT.bool
};
LenkepanelBase.defaultProps = {
    className: undefined,
    linkCreator: (props) => React.createElement("a", Object.assign({}, props)),
    border: false
};
exports.default = LenkepanelBase;
//# sourceMappingURL=Lenkepanel-base.js.map