/* eslint-disable react/prefer-stateless-function  */
import * as PT from 'prop-types';
import * as React from 'react';
import * as classNames from 'classnames';
import { guid } from 'nav-frontend-js-utils';
import 'nav-frontend-skjema-style'; // eslint-disable-line import/extensions
import SkjemaelementFeilmelding, {
    skjemaelementFeilmeldingShape,
    SkjemaelementFeilmeldingType
} from './skjemaelement-feilmelding';
import {Bredde} from "nav-frontend-skjema/src/index";

const cls = (className) => classNames('skjemaelement', className);
const inputCls = (harFeil) => classNames('skjemaelement__input', {
    'skjemaelement__input--harFeil': harFeil
});
const selectCls = (bredde) => classNames('selectContainer', `input--${bredde}`);

export interface SelectProps {
    children: React.ReactNode | React.ReactChild | React.ReactChildren;
    label: React.ReactNode;
    className?: string;
    bredde?: Bredde;
    id?: string;
    feil?: SkjemaelementFeilmeldingType;
    selectRef?: () => void;
    disabled?: boolean;
}

/**
 * Select
 */
class Select extends React.Component<SelectProps> {

    render() {
        const { children, bredde, disabled, className, label, id, feil, selectRef, ...other } = this.props;
        const inputId = id || guid();
        return (
            <div className={cls(className)}>
                <label className="skjemaelement__label" htmlFor={inputId}>
                    {label}
                </label>
                <div className={selectCls(bredde)}>
                    <select
                        id={inputId}
                        className={inputCls(feil)}
                        ref={selectRef}
                        disabled={disabled}
                        {...other}
                    >
                        {children}
                    </select>
                </div>
                <SkjemaelementFeilmelding feil={feil} />
            </div>
        );
    }
}

(Select as React.ComponentClass).propTypes = {
    /**
     * En eller flere select options
     */
    children: PT.oneOfType([
        PT.arrayOf(PT.node),
        PT.node
    ]).isRequired,
    /**
     * ClassName
     */
    className: PT.string,
    /**
     * Bredden på select-boksen
     */
    bredde: PT.oneOf(['fullbredde', 'xxl', 'xl', 'l', 'm', 's', 'xs']),
    /**
     * Label for select
     */
    label: PT.node.isRequired,
    /**
     * Id for select, hvis id ikke er satt brukes en tilfeldig guid
     */
    id: PT.string,
    /**
     * Hvis skjemaet har feil sender man inn et objekt med en feilmelding
     */
    feil: skjemaelementFeilmeldingShape,
    /**
     * Referanse til selve selectfeltet. Brukes for eksempel til å sette fokus
     */
    selectRef: PT.func,
    disabled: PT.bool
};

(Select as React.ComponentClass).defaultProps = {
    className: undefined,
    id: undefined,
    bredde: 'fullbredde',
    feil: undefined,
    selectRef: undefined,
    disabled: false
};

export default Select;
