"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const classNames = require("classnames");
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
require("nav-frontend-skjema-style");
class CheckboksPanel extends React.Component {
    constructor(props) {
        super(props);
        this.handleChange = (e) => {
            this.setState({ checked: e.target.checked });
            if (typeof this.props.onChange === 'function')
                this.props.onChange(e);
        };
        this.state = { hasFocus: false, checked: this.props.checked };
    }
    componentWillReceiveProps(newProps) {
        this.setState({ checked: newProps.checked });
    }
    toggleOutline() {
        this.setState({ hasFocus: !this.state.hasFocus });
    }
    render() {
        const { id, label, onChange, inputProps, disabled } = this.props;
        const { hasFocus, checked } = this.state;
        const inputId = id || nav_frontend_js_utils_1.guid();
        const cls = classNames('inputPanel checkboksPanel', {
            'inputPanel--checked': checked && !disabled,
            'inputPanel--focused': hasFocus && !disabled,
            'inputPanel--disabled': disabled === true
        });
        return (React.createElement("label", { className: cls, htmlFor: inputId },
            React.createElement("input", Object.assign({}, inputProps, { id: inputId, className: "inputPanel__field", type: "checkbox", checked: checked, "aria-checked": checked, disabled: disabled, onFocus: () => this.toggleOutline(), onBlur: () => this.toggleOutline(), onChange: this.handleChange })),
            React.createElement("span", { className: "inputPanel__label" }, label)));
    }
}
exports.CheckboksPanel = CheckboksPanel;
exports.default = CheckboksPanel;
//# sourceMappingURL=checkboks-panel.js.map