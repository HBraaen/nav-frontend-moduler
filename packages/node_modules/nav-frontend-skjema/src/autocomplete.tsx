import * as React from 'react';
import * as PT from "prop-types";
import NavFrontendSpinner from './../../nav-frontend-spinner';

declare var require: any;

const ReactAutocomplete = require("react-autocomplete");

interface AutocompleteItem {
    displayName: string;
    key?: string|number;
    value?: string|number;
    content?: any;
}

interface AutocompleteProps {
    placeholder?: string;
    items: AutocompleteItem[];
    onChange: (value: string) => void;
    onBlur?: () => void;
    onFocus?: () => void;
    value?: string;
    showSpinner?: boolean;
}

export class Autocomplete extends React.Component<AutocompleteProps, {}> {

    constructor(props: AutocompleteProps) {
        super(props);
        const value = props.value ? props.value : '';
    }

    onChange(value: string) {
        this.props.onChange(value);
    }

    handleInputBlur() {
        if ( this.props.onBlur ) {
            this.props.onBlur();
        }
    }

    handleInputFocus(): void {
        if ( this.props.onFocus ) {
            this.props.onFocus()
        }
    }

    renderMenu(children: any): React.ReactNode {
        return (
            <div
                className="menu"
                role="listbox"
                id="owned_listbox"
            >
                {children}
            </div>
        );
    }

    render() {
        let placeholder = this.props.placeholder ? this.props.placeholder : '';
        const showSpinner = this.props.showSpinner;
        return (
            <div className="navAutocomplete">
                <ReactAutocomplete
                    {...this.props}
                    inputProps={{
                        className: "skjemaelement__input input--fullbredde ",
                        id: "states-autocomplete",
                        placeholder: placeholder,
                        "aria-owns": "owned_listbox",
                        onBlur: () => this.handleInputBlur(),
                        onFocus: () => this.handleInputFocus()
                    }}
                    getItemValue={(item) => item.label}
                    items={this.props.items}
                    renderMenu={(items, value, style) =>
                        <div className="menu" children={items} style={style}/>
                    }
                    renderItem={(item, isHighlighted, style) =>
                        <div
                            key={Math.random()}
                            className={`item ${isHighlighted ? "item-highlighted" : ""}`}
                            style={{ ...style }}
                        >
                            {item.label}
                        </div>
                    }
                    onChange={(e) => this.onChange(e.target.value)}
                    onSelect={(val) => this.onChange(val)}
                />
                {showSpinner && (
                    <span className="navAutcomplete__spinner">
                    <NavFrontendSpinner type="XS"/>
                </span>
                )}
                {!showSpinner && (
                    <span className="navAutcomplete__magnifyer"/>
                )}
            </div>
        );
    }
}

(Autocomplete as React.ComponentClass).propTypes = {
    value: PT.string,
    showSpinner: PT.bool,
    onChange: PT.func.isRequired
};

export default Autocomplete;
