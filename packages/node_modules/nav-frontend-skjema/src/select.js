"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PT = require("prop-types");
const React = require("react");
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
require("nav-frontend-skjema-style");
const classNames = require("classnames");
const skjemaelement_feilmelding_1 = require("./skjemaelement-feilmelding"); // tslint:disable-line:max-line-length
const cls = (className) => classNames('skjemaelement', className);
const inputCls = (harFeil) => classNames('skjemaelement__input', {
    'skjemaelement__input--harFeil': harFeil
});
const selectCls = (bredde) => classNames('selectContainer', `input--${bredde}`);
/**
 * Select
 */
class Select extends React.Component {
    render() {
        const { children, bredde, disabled, className, label, id, feil, selectRef, ...other } = this.props;
        const inputId = id || nav_frontend_js_utils_1.guid();
        return (React.createElement("div", { className: cls(className) },
            React.createElement("label", { className: "skjemaelement__label", htmlFor: inputId }, label),
            React.createElement("div", { className: selectCls(bredde) },
                React.createElement("select", Object.assign({ id: inputId, className: inputCls(feil), ref: selectRef, disabled: disabled }, other), children)),
            React.createElement(skjemaelement_feilmelding_1.default, { feil: feil })));
    }
}
Select.propTypes = {
    /**
     * En eller flere select options
     */
    children: PT.oneOfType([
        PT.arrayOf(PT.node),
        PT.node
    ]).isRequired,
    /**
     * ClassName
     */
    className: PT.string,
    /**
     * Bredden på select-boksen
     */
    bredde: PT.oneOf(['fullbredde', 'xxl', 'xl', 'l', 'm', 's', 'xs']),
    /**
     * Label for select
     */
    label: PT.node.isRequired,
    /**
     * Id for select, hvis id ikke er satt brukes en tilfeldig guid
     */
    id: PT.string,
    /**
     * Hvis skjemaet har feil sender man inn et objekt med en feilmelding
     */
    feil: skjemaelement_feilmelding_1.skjemaelementFeilmeldingShape,
    /**
     * Referanse til selve selectfeltet. Brukes for eksempel til å sette fokus
     */
    selectRef: PT.func,
    disabled: PT.bool
};
Select.defaultProps = {
    className: undefined,
    id: undefined,
    bredde: 'fullbredde',
    feil: undefined,
    selectRef: undefined,
    disabled: false
};
exports.default = Select;
//# sourceMappingURL=select.js.map