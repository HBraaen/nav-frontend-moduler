"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PT = require("prop-types");
const React = require("react");
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
require("nav-frontend-skjema-style");
const classNames = require("classnames");
const cls = (className) => classNames('skjemaelement skjemaelement--horisontal', className);
/**
 * Radio
 */
class Radio extends React.Component {
    render() {
        const { className, name, label, id, radioRef, ...other } = this.props;
        const inputId = id || nav_frontend_js_utils_1.guid();
        // tslint:disable:react-a11y-role-has-required-aria-props
        return (React.createElement("div", { className: cls(className) },
            React.createElement("input", Object.assign({ type: "radio", name: name, className: "skjemaelement__input radioknapp", id: inputId, ref: radioRef }, other)),
            React.createElement("label", { className: "skjemaelement__label", htmlFor: inputId }, label)));
    }
}
Radio.propTypes = {
    /**
     * ClassName
     */
    className: PT.string,
    /**
     * Label for radiobutton
     */
    label: PT.node.isRequired,
    /**
     * Id for radiobutton, hvis id ikke er satt brukes en tilfeldig guid
     */
    id: PT.string,
    /**
     * Name for radiobutton gruppe
     */
    name: PT.string.isRequired,
    /**
     * Referanse til selve radioknappen. Brukes for eksempel til Ã¥ sette fokus
     */
    radioRef: PT.func
};
Radio.defaultProps = {
    className: undefined,
    id: undefined,
    radioRef: undefined
};
exports.default = Radio;
//# sourceMappingURL=radio.js.map