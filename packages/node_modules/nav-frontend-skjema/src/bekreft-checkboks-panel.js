"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const classNames = require("classnames");
const PT = require("prop-types");
class BekreftCheckboksPanel extends React.Component {
    constructor(props) {
        super(props);
        this.state = { hasFocus: false };
    }
    toggleOutline() {
        return () => this.setState({ hasFocus: !this.state.hasFocus });
    }
    renderChildren() {
        const children = this.props.children;
        return children ? React.createElement("div", { className: "bekreftCheckboksPanel-innhold" }, children) : null;
    }
    render() {
        const { checked, onChange, label, inputProps, className } = this.props;
        const { hasFocus } = this.state;
        const cls = classNames('inputPanel bekreftCheckboksPanel', className, {
            'inputPanel--checked': checked,
            'inputPanel--focused': hasFocus
        });
        return (React.createElement("div", { className: cls },
            this.renderChildren(),
            React.createElement("label", { className: "inputPanel__label" },
                React.createElement("input", Object.assign({}, inputProps, { className: "inputPanel__field", type: "checkbox", checked: checked, "aria-checked": checked, onFocus: this.toggleOutline(), onBlur: this.toggleOutline(), onChange: onChange })),
                React.createElement("span", { className: "inputPanel__textlabel" }, label))));
    }
}
exports.BekreftCheckboksPanel = BekreftCheckboksPanel;
BekreftCheckboksPanel.propTypes = {
    children: PT.node,
    className: PT.string,
    checked: PT.bool.isRequired,
    label: PT.string.isRequired,
    onChange: PT.func.isRequired
};
exports.default = BekreftCheckboksPanel;
//# sourceMappingURL=bekreft-checkboks-panel.js.map