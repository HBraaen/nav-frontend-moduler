"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const classnames = require("classnames");
const Modal = require("react-modal");
const nav_frontend_lukknapp_1 = require("nav-frontend-lukknapp");
require("nav-frontend-modal-style");
const cls = (className) => classnames('modal', className);
class ModalWrapper extends React.Component {
    constructor(props) {
        super(props);
        this.onRequestClose = this.onRequestClose.bind(this);
    }
    static setAppElement(element) {
        Modal.setAppElement(element);
    }
    onRequestClose(evt) {
        const { onRequestClose, shouldCloseOnOverlayClick } = this.props;
        if (shouldCloseOnOverlayClick || evt.type === 'keydown') {
            onRequestClose();
        }
        else if (this.closeButtonRef) {
            this.closeButtonRef.focus();
        }
        else {
            if (this.modalRef && this.modalRef.portal) {
                this.modalRef.portal.refs.content.focus();
            }
        }
    }
    render() {
        const { children, closeButton, shouldCloseOnOverlayClick, contentClass, ...props } = this.props;
        const lukkModalLabel = 'Lukk modal';
        return (React.createElement(Modal, Object.assign({}, props, { className: cls(props.className), onRequestClose: this.onRequestClose, overlayClassName: "modal__overlay", shouldCloseOnOverlayClick: true, ref: (modalRef) => {
                this.modalRef = modalRef;
            } }),
            React.createElement("section", { className: contentClass }, children),
            closeButton && (React.createElement(nav_frontend_lukknapp_1.default, { overstHjorne: true, className: classnames({
                    'modal__lukkknapp--shake': shouldCloseOnOverlayClick
                }), ariaLabel: lukkModalLabel, onClick: props.onRequestClose, ref: (closeButtonRef) => {
                    this.closeButtonRef = closeButtonRef;
                } }, lukkModalLabel))));
    }
}
ModalWrapper.defaultProps = {
    closeButton: true,
    shouldCloseOnOverlayClick: true,
    closeTimeoutMS: 0,
    contentClass: undefined,
    onAfterOpen: undefined
};
exports.default = ModalWrapper;
//# sourceMappingURL=index.js.map